# For more information, please refer to https://aka.ms/vscode-docker-python
FROM python:3.9-bullseye as base

# Keeps Python from generating .pyc files in the container
ENV PYTHONDONTWRITEBYTECODE=1

# Turns off buffering for easier container logging
ENV PYTHONUNBUFFERED=1

# installing dependecies for installing python packages
RUN apt update -y && apt install -y build-essential libpq-dev
RUN pip install psycopg2-binary --no-binary psycopg2-binary

# installing packages
WORKDIR /usr/src/app
COPY ./requirements.txt .
RUN [ "python3", "-m", "pip", "install", "-r", "requirements.txt" ] 


# copying files & folders
COPY ./ ./

ARG API_READ_DB_CONNECTION_HOST
ENV API_READ_DB_CONNECTION_HOST=$API_READ_DB_CONNECTION_HOST

ARG API_READ_DB_CONNECTION_DATABASE
ENV API_READ_DB_CONNECTION_DATABASE=$API_READ_DB_CONNECTION_DATABASE

ARG API_READ_DB_CONNECTION_USERNAME
ENV API_READ_DB_CONNECTION_USERNAME=$API_READ_DB_CONNECTION_USERNAME

ARG API_READ_DB_CONNECTION_PASSWORD
ENV API_READ_DB_CONNECTION_PASSWORD=$API_READ_DB_CONNECTION_PASSWORD

ARG API_READ_DB_CONNECTION_PORT
ENV API_READ_DB_CONNECTION_PORT=$API_READ_DB_CONNECTION_PORT

ARG API_WRITE_DB_CONNECTION_HOST
ENV API_WRITE_DB_CONNECTION_HOST=$API_WRITE_DB_CONNECTION_HOST

ARG API_WRITE_DB_CONNECTION_DATABASE
ENV API_WRITE_DB_CONNECTION_DATABASE=$API_WRITE_DB_CONNECTION_DATABASE

ARG API_WRITE_DB_CONNECTION_USERNAME
ENV API_WRITE_DB_CONNECTION_USERNAME=$API_WRITE_DB_CONNECTION_USERNAME

ARG API_WRITE_DB_CONNECTION_PASSWORD
ENV API_WRITE_DB_CONNECTION_PASSWORD=$API_WRITE_DB_CONNECTION_PASSWORD

ARG API_WRITE_DB_CONNECTION_PORT
ENV API_WRITE_DB_CONNECTION_PORT=$API_WRITE_DB_CONNECTION_PORT

ARG API_WRITE_DB_CONNECTION_PORT
ENV API_WRITE_DB_CONNECTION_PORT=$API_WRITE_DB_CONNECTION_PORT

ARG DJANGO_SECRET_KEY
ENV DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY

EXPOSE 8080

#  Run Migrations and then Django app
ENTRYPOINT ["/bin/sh", "-c", "python3 manage.py migrate  && python3 manage.py runserver 0.0.0.0:8080" ] 

