from django.db import models

class LpRecent(models.Model):
    id = models.IntegerField(primary_key=True)
    liquidity_pool_id = models.IntegerField(blank=True, null=True)
    lp_name = models.CharField(max_length=100, blank=True, null=True)
    fee_taken = models.FloatField(blank=True, null=True)
    fee_earned = models.FloatField(blank=True, null=True)
    # summary_type = models.IntegerField(blank=True, null=True)
    summary_type = models.ForeignKey('SummaryType', models.DO_NOTHING, db_column='summary_type', blank=True, null=True)
    open_timestamp_utc = models.DateTimeField(blank=True, null=True)
    close_timestamp_utc = models.DateTimeField(blank=True, null=True)
    created_at_timestamp_utc = models.DateTimeField(blank=True, null=True)
    last_processed = models.DateTimeField(blank=True, null=True)
    platform_id = models.IntegerField(blank=True, null=True)
    platform_name = models.CharField(max_length=100, blank=True, null=True)
    network_id = models.IntegerField(blank=True, null=True)
    contract_address = models.CharField(max_length=100, blank=True, null=True)
    url = models.CharField(max_length=255, blank=True, null=True)
    token0_symbol = models.CharField(max_length=12, blank=True, null=True)
    token1_symbol = models.CharField(max_length=12, blank=True, null=True)
    token0_address = models.CharField(max_length=100, blank=True, null=True)
    token1_address = models.CharField(max_length=100, blank=True, null=True)
    token0_collateral = models.IntegerField(blank=True, null=True)
    token1_collateral = models.IntegerField(blank=True, null=True)
    total_period_return = models.FloatField(blank=True, null=True)
    total_apy = models.FloatField(blank=True, null=True)
    yield_on_lp_fees = models.FloatField(blank=True, null=True)
    fees_apy = models.FloatField(blank=True, null=True)
    price_change_ret = models.FloatField(blank=True, null=True)
    hodl_return = models.FloatField(blank=True, null=True)
    impermanent_loss_level = models.FloatField(blank=True, null=True)
    impermanent_loss_impact = models.FloatField(blank=True, null=True)
    volume = models.FloatField(blank=True, null=True)
    transactions_period = models.IntegerField(blank=True, null=True)
    open_reserve_0 = models.FloatField(blank=True, null=True)
    open_reserve_1 = models.FloatField(blank=True, null=True)
    close_reserve_0 = models.FloatField(blank=True, null=True)
    close_reserve_1 = models.FloatField(blank=True, null=True)
    poolsize = models.FloatField(blank=True, null=True)
    open_poolsize = models.FloatField(blank=True, null=True)
    close_poolsize = models.FloatField(blank=True, null=True)
    open_price_0 = models.FloatField(blank=True, null=True)
    open_price_1 = models.FloatField(blank=True, null=True)
    high_price_0 = models.FloatField(blank=True, null=True)
    high_price_1 = models.FloatField(blank=True, null=True)
    low_price_0 = models.FloatField(blank=True, null=True)
    low_price_1 = models.FloatField(blank=True, null=True)
    close_price_0 = models.FloatField(blank=True, null=True)
    close_price_1 = models.FloatField(blank=True, null=True)
    lp_watchlevel = models.IntegerField(blank=True, null=True)
    notes = models.TextField(blank=True, null=True)

    class Meta:
        managed = False  # Created from a view. Don't remove.
        db_table = 'lp_recent'